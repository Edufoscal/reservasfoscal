// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using reservasedufoscal.Data;

#nullable disable

namespace reservasedufoscal.Migrations
{
    [DbContext(typeof(firstDbcontext))]
    [Migration("20231031234217_added_tables_reservatios_2")]
    partial class added_tables_reservatios_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("reservasedufoscal.Data.models.espacios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("capacidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("horafin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horainicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipologia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("espacios");
                });

            modelBuilder.Entity("reservasedufoscal.Data.models.tipoUsuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tipoUsuarios");
                });

            modelBuilder.Entity("reservasedufoscal.Data.models.usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("tipoUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("reservasedufoscal.Data.models.usuario", b =>
                {
                    b.HasOne("reservasedufoscal.Data.models.tipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("tipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
